// Tables

table {
  max-width: 100%;
  background-color: @table-background;
}

td,th {
  padding: 6pt;
  border-width: @table-border-width;
  border-style: @table-border-style;
  border-color: @table-border-color;
}

table.condensed {
  width: 100%;
  th,
  td {
    padding: 3pt 3.75pt;
  }
}

.tables table {
  width: 100%;
  border-radius:@radius-base;
  margin-bottom: 0.5em;
  th,
  td {
    padding: 6pt;
    line-height: @line-height-base;
    text-align: left;
    vertical-align: top;

  }
  th {
    font-weight: bold;
  }
  thead th,
  thead td
  {
    border-top: 0;
    vertical-align: bottom;
  }
  th:first-child,
  td:first-child
  {
    border-left: 0;
  }

  // Nesting
  table {
    background-color: @body-background-color;
  }

  tbody tr {
    &.success > td {
      background-color: @color-success;
    }
    &.error > td {
      background-color: @color-error;
    }
    &.warning > td {
      background-color: @color-warning;
    }
  }
}

.tables table:not(.striped-none) {
  > tbody {
    > tr:nth-child(even) > td,
    > tr:nth-child(even) > th {
      background-color: @table-background-accent;
    }
  }
  > tbody:nth-child(even){
    background-color: @table-background-accent;
  }
}

.tables table:not(.hover-none) {
  tbody {
    tr:hover > td,
    tr:hover > th {
      background-color: @table-background-hover;
    }
  }
  // Hover states for .tables-hover
  tbody tr {
    &.success:hover > td {
      background-color: darken(@color-success, 5%);
    }
    &.error:hover > td {
      background-color: darken(@color-error, 5%);
    }
    &.warning:hover > td {
      background-color: darken(@color-warning, 5%);
    }
  }
}
